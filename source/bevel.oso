OpenShadingLanguage 1.00
# Compiled by oslc 1.13.0.@PROJECT_VERSION_TWEAK@"dev"
# options: 
shader bevel
param	float	scale	0.0500000007		%read{7,7} %write{2147483647,-1}
oparam	float	resultF	0		%read{2147483647,-1} %write{7,7}
global	normal	N	%read{0,0} %write{2147483647,-1} %derivs
local	normal	Nf	%read{1,2} %write{0,0} %derivs
local	normal	dNdx	%read{3,3} %write{1,1}
local	normal	dNdy	%read{4,4} %write{2,2}
local	float	curvature	%read{6,6} %write{5,5}
temp	float	$tmp1	%read{5,5} %write{3,3}
temp	float	$tmp2	%read{5,5} %write{4,4}
temp	float	$tmp3	%read{7,7} %write{6,6}
const	float	$const1	0		%read{6,6} %write{2147483647,-1}
const	float	$const2	1		%read{6,6} %write{2147483647,-1}
code ___main___
# ../shaders/bevel_displacement.osl:15
#     normal Nf = normalize(N);
	normalize	Nf N 	%filename{"../shaders/bevel_displacement.osl"} %line{15} %argrw{"wr"}
# ../shaders/bevel_displacement.osl:16
#     normal dNdx = Dx(Nf);
	Dx		dNdx Nf 	%line{16} %argrw{"wr"} %argderivs{1}
# ../shaders/bevel_displacement.osl:17
#     normal dNdy = Dy(Nf);
	Dy		dNdy Nf 	%line{17} %argrw{"wr"} %argderivs{1}
# ../shaders/bevel_displacement.osl:19
#     float curvature = length(dNdx) + length(dNdy);
	length		$tmp1 dNdx 	%line{19} %argrw{"wr"}
	length		$tmp2 dNdy 	%argrw{"wr"}
	add		curvature $tmp1 $tmp2 	%argrw{"wrr"}
# ../shaders/bevel_displacement.osl:21
#     resultF = smoothstep(0.0, 1.0, curvature) * scale;
	smoothstep	$tmp3 $const1 $const2 curvature 	%line{21} %argrw{"wrrr"}
	mul		resultF $tmp3 scale 	%argrw{"wrr"}
	end
